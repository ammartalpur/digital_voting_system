<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Vote Confirmation</title>
    <style>
      body {
        margin: 0;
        font-family: "Arial", sans-serif;
        color: #ffffff;
        background: linear-gradient(120deg, #0f2027, #203a43, #2c5364);
        display: flex;
        align-items: center;
        justify-content: center;
        height: 100vh;
      }
      #particles-js {
        position: absolute;
        width: 100%;
        height: 100%;
        z-index: -1;
        top: 0;
        left: 0;
      }

      .container {
        text-align: center;
        padding: 30px;
        border-radius: 15px;
        background: rgba(255, 255, 255, 0.1);
        box-shadow: 0 8px 15px rgba(0, 0, 0, 0.3);
        width: 90%;
        max-width: 600px;
      }

      .container h1 {
        font-size: 2.5rem;
        margin-bottom: 10px;
        color: #ffcc00;
      }

      .container p {
        font-size: 1.2rem;
        margin: 15px 0 30px;
        color: #d3d3d3;
      }

      .votes-section {
        margin-top: 20px;
        text-align: left;
      }

      .votes-section h2 {
        font-size: 1.8rem;
        margin-bottom: 10px;
        border-bottom: 2px solid #ffcc00;
        display: inline-block;
        padding-bottom: 5px;
      }

      .candidate {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 15px;
        margin-bottom: 10px;
        background: rgba(255, 255, 255, 0.15);
        border-radius: 10px;
        transition: transform 0.2s, box-shadow 0.2s;
      }

      .candidate:hover {
        transform: scale(1.02);
        box-shadow: 0 5px 10px rgba(0, 0, 0, 0.3);
      }

      .candidate span {
        font-size: 1.2rem;
      }
      .next {
        display: inline-block;
        font-size: 1.3rem;
        font-weight: bold;
        background: #ffcc00;
        color: #000;
        text-decoration: none;
        border: none;
        padding: 1rem 2rem;
        border-radius: 6px;
        transition: 0.5s;
        margin-top: 2rem;
        margin-left: 250px;
      }

      .next:hover {
        background: #f6ff00;
        transform: translateY(-5px);
      }
    </style>
  </head>
  <body>
    <div id="particles-js"></div>
    <div class="container">
      <h1>Vote Successfully Cast!</h1>
      <p>
        Your vote has been Added for <strong>Toufeeq Ahmed</strong>. Thank you
        for participating in the election!
      </p>
      <div class="votes-section">
        <h2>Current Voting Summary</h2>
        <% candidates.forEach(candidate => { %>
        <div class="candidate">
          <span><%= candidate.name %></span>
          <span><%= candidate.votes %> Votes</span>
        </div>
        <% }); %>
        <a href="userroll" class="next">Next</a>
      </div>
    </div>
    <script src="https://cdn.jsdelivr.net/particles.js/2.0.0/particles.min.js"></script>
    <script src="cpp/particles.js"></script>
    <script>
      // Initialize the WebAssembly module
      createModule()
        .then((Module) => {
          if (Module.getParticleConfig) {
            const config = Module.getParticleConfig();

            // Convert the config to the format expected by particles.js
            const particlesConfig = {
              particles: {
                number: {
                  value: config.number_value,
                  density: {
                    enable: config.density_enable,
                    value_area: config.density_value_area,
                  },
                },
                color: { value: config.color_value },
                shape: { type: config.shape_type },
                opacity: {
                  value: config.opacity_value,
                  anim: {
                    enable: config.opacity_anim_enable,
                    speed: config.opacity_anim_speed,
                    opacity_min: config.opacity_anim_opacity_min,
                    sync: config.opacity_anim_sync,
                  },
                },
                size: {
                  value: config.size_value,
                  random: config.size_random,
                  anim: {
                    enable: config.size_anim_enable,
                    speed: config.size_anim_speed,
                    size_min: config.size_anim_size_min,
                    sync: config.size_anim_sync,
                  },
                },
                line_linked: {
                  enable: config.line_linked_enable,
                  distance: config.line_linked_distance,
                  color: config.line_linked_color,
                  opacity: config.line_linked_opacity,
                  width: config.line_linked_width,
                },
                move: {
                  enable: config.move_enable,
                  speed: config.move_speed,
                  direction: config.move_direction,
                  out_mode: config.move_out_mode,
                  bounce: config.move_bounce,
                },
              },
              interactivity: {
                events: {
                  onhover: {
                    enable: config.interactivity_onhover_enable,
                    mode: config.interactivity_onhover_mode,
                  },
                  onclick: {
                    enable: config.interactivity_onclick_enable,
                    mode: config.interactivity_onclick_mode,
                  },
                },
              },
              retina_detect: config.retina_detect,
            };

            // Initialize particles.js with the configuration
            particlesJS("particles-js", particlesConfig);
          } else {
            console.error(
              "getParticleConfig function not found in the WebAssembly module."
            );
          }
        })
        .catch((error) => {
          console.error("Error initializing the WebAssembly module:", error);
        });
    </script>
  </body>
</html>
